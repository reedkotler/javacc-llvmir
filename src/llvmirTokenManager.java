/* Generated By:JavaCC: Do not edit this line. llvmirTokenManager.java */

/** Token Manager. */
public class llvmirTokenManager implements llvmirConstants
{

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_0(0, 42, 85);
      case 44:
         return jjStopAtPos(0, 43);
      case 61:
         return jjStopAtPos(0, 39);
      case 123:
         return jjStopAtPos(0, 40);
      case 125:
         return jjStopAtPos(0, 41);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 133;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff601000000000L & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(85, 87);
                  else if (curChar == 37)
                     jjCheckNAddStates(0, 5);
                  else if (curChar == 34)
                     jjCheckNAddStates(6, 13);
                  else if (curChar == 35)
                     jjCheckNAdd(13);
                  else if (curChar == 59)
                     jjCheckNAddTwoStates(3, 4);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     jjCheckNAddStates(14, 25);
                  }
                  else if ((0x601000000000L & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAdd(25);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  else if ((0x601000000000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAdd(23);
                  }
                  if ((0x280000000000L & l) != 0L)
                  {
                     if (kind > 28)
                        kind = 28;
                     jjCheckNAddStates(26, 29);
                  }
                  else if (curChar == 48)
                     jjAddStates(30, 44);
                  else if (curChar == 36)
                     jjAddStates(45, 46);
                  if (curChar == 45)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAdd(87);
                  }
                  else if ((0x601000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     jjCheckNAdd(86);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 2:
                  if (curChar == 59)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  if ((0xfffffffffffffbffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 5:
                  if (curChar == 48 && kind > 7)
                     kind = 7;
                  break;
               case 6:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 9:
                  if ((0x100002600L & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 10:
                  if ((0x3ff601000000000L & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if (curChar == 58 && kind > 18)
                     kind = 18;
                  break;
               case 12:
                  if (curChar == 35)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(13);
                  break;
               case 14:
                  if (curChar == 36)
                     jjAddStates(45, 46);
                  break;
               case 15:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(16);
                  break;
               case 17:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 18:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 19:
                  if (curChar == 34 && kind > 20)
                     kind = 20;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(25);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjCheckNAddStates(14, 25);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(27);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAdd(28);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAdd(29);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(30);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(31, 32);
                  break;
               case 32:
                  if (curChar != 46)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(33);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(33);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(34, 35);
                  break;
               case 35:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 38:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(39);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(39);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if (curChar != 46)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAdd(42);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAdd(42);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 47:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(48);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjCheckNAdd(48);
                  break;
               case 49:
                  if (curChar == 34)
                     jjCheckNAddStates(6, 13);
                  break;
               case 50:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 51:
                  if (curChar == 34 && kind > 10)
                     kind = 10;
                  break;
               case 52:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(52, 53);
                  break;
               case 53:
                  if (curChar == 34)
                     jjCheckNAdd(11);
                  break;
               case 54:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(54, 55);
                  break;
               case 55:
                  if (curChar == 34 && kind > 36)
                     kind = 36;
                  break;
               case 56:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if (curChar == 34 && kind > 37)
                     kind = 37;
                  break;
               case 59:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(60);
                  break;
               case 60:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(60);
                  break;
               case 61:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(62, 63);
                  break;
               case 62:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(62, 63);
                  break;
               case 63:
                  if (curChar == 34 && kind > 12)
                     kind = 12;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 65:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(66);
                  break;
               case 66:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(66);
                  break;
               case 67:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 68:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 69:
                  if (curChar == 34 && kind > 13)
                     kind = 13;
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 71:
                  if (curChar == 37)
                     jjCheckNAddStates(0, 5);
                  break;
               case 72:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(73);
                  break;
               case 73:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(73);
                  break;
               case 74:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 75:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 76:
                  if (curChar == 34 && kind > 15)
                     kind = 15;
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if ((0x601000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(79);
                  break;
               case 79:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(79);
                  break;
               case 80:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 81:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 82:
                  if (curChar == 34 && kind > 16)
                     kind = 16;
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 17)
                     kind = 17;
                  jjCheckNAdd(83);
                  break;
               case 84:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(85, 87);
                  break;
               case 86:
                  if ((0x3ff601000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(86);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAdd(87);
                  break;
               case 88:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 89:
                  if ((0x280000000000L & l) == 0L)
                     break;
                  if (kind > 28)
                     kind = 28;
                  jjCheckNAddStates(26, 29);
                  break;
               case 90:
                  if (curChar == 48)
                     jjAddStates(30, 44);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 132;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe97fffffeL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAdd(25);
                  }
                  else if (curChar == 64)
                     jjAddStates(47, 52);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAdd(23);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 7;
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  if ((0x7e0000007eL & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 85:
               case 86:
                  if ((0x7fffffe97fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAdd(86);
                  break;
               case 1:
                  if ((0x7e0000007eL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  jjAddStates(53, 54);
                  break;
               case 7:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 15:
               case 16:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(16);
                  break;
               case 18:
                  jjAddStates(55, 56);
                  break;
               case 20:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if ((0x7fffffe97fffffeL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0x7fffffe97fffffeL & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(25);
                  break;
               case 37:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(57, 58);
                  break;
               case 46:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(59, 60);
                  break;
               case 50:
                  jjAddStates(61, 62);
                  break;
               case 52:
                  jjAddStates(63, 64);
                  break;
               case 54:
                  jjAddStates(65, 66);
                  break;
               case 56:
                  jjAddStates(67, 68);
                  break;
               case 58:
                  if (curChar == 64)
                     jjAddStates(47, 52);
                  break;
               case 59:
               case 60:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(60);
                  break;
               case 62:
                  jjAddStates(69, 70);
                  break;
               case 65:
               case 66:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAdd(66);
                  break;
               case 68:
                  jjAddStates(71, 72);
                  break;
               case 72:
               case 73:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(73);
                  break;
               case 75:
                  jjAddStates(73, 74);
                  break;
               case 78:
               case 79:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(79);
                  break;
               case 81:
                  jjAddStates(75, 76);
                  break;
               case 91:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 92:
                  if (curChar != 72)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(93);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(93);
                  break;
               case 94:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 95:
                  if (curChar != 77)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(96);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(96);
                  break;
               case 97:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if (curChar != 76)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(99);
                  break;
               case 100:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar != 75)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(102);
                  break;
               case 102:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(102);
                  break;
               case 103:
                  if (curChar != 120)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(104);
                  break;
               case 104:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(104);
                  break;
               case 105:
                  if (curChar != 120)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAdd(106);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAdd(106);
                  break;
               case 107:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 108:
                  if (curChar != 75)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(109);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(109);
                  break;
               case 110:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 111:
                  if (curChar != 76)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(112);
                  break;
               case 112:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(112);
                  break;
               case 113:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if (curChar != 77)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(115);
                  break;
               case 115:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(115);
                  break;
               case 116:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if (curChar != 72)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(118);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(118);
                  break;
               case 119:
                  if (curChar != 120)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(120);
                  break;
               case 120:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(120);
                  break;
               case 121:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 122:
                  if (curChar != 75)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(123);
                  break;
               case 123:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(123);
                  break;
               case 124:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 125:
                  if (curChar != 76)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(126);
                  break;
               case 126:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(126);
                  break;
               case 127:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 128:
                  if (curChar != 77)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(129);
                  break;
               case 129:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(129);
                  break;
               case 130:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 131:
                  if (curChar != 72)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(132);
                  break;
               case 132:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(132);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(53, 54);
                  break;
               case 18:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(55, 56);
                  break;
               case 50:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(61, 62);
                  break;
               case 52:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(63, 64);
                  break;
               case 54:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(65, 66);
                  break;
               case 56:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(67, 68);
                  break;
               case 62:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(69, 70);
                  break;
               case 68:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(71, 72);
                  break;
               case 75:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(73, 74);
                  break;
               case 81:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(75, 76);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 133 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   72, 74, 77, 78, 80, 83, 50, 51, 52, 53, 54, 55, 56, 57, 27, 28, 
   29, 30, 31, 32, 34, 35, 40, 41, 43, 44, 31, 34, 40, 43, 91, 94, 
   97, 100, 103, 105, 107, 110, 113, 116, 119, 121, 124, 127, 130, 15, 17, 59, 
   61, 64, 65, 67, 70, 3, 4, 18, 19, 38, 39, 47, 48, 50, 51, 52, 
   53, 54, 55, 56, 57, 62, 63, 68, 69, 75, 76, 81, 82, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, "\75", 
"\173", "\175", "\41", "\54", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffffffff3fL, 
};
static final long[] jjtoSkip = {
   0xc0L, 
};
static protected SimpleCharStream input_stream;
static private final int[] jjrounds = new int[133];
static private final int[] jjstateSet = new int[266];
static protected char curChar;
/** Constructor. */
public llvmirTokenManager(SimpleCharStream stream){
   if (input_stream != null)
      throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);
   input_stream = stream;
}

/** Constructor. */
public llvmirTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
static private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 133; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
static public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
static public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
